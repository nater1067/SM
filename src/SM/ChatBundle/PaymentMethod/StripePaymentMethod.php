<?php
namespace SM\ChatBundle\PaymentMethod;

use Stripe_Charge;
use Stripe_Customer;
use Doctrine\ORM\EntityManager;
use SM\ChatBundle\Entity\Viewer;

/**
 * Class StripePaymentMethod
 * @package SM\ChatBundle\PaymentMethod
 */
class StripePaymentMethod extends AbstractPaymentMethod
{
    /**
     * @see https://manage.stripe.com/account/apikeys
     * @var string
     */
    protected $apiKey;

    /** @var Viewer */
    protected $viewer;
    /**
     * @var Doctrine\ORM\EntityManager
     */
    protected $em;

    /**
     * @param \Doctrine\ORM\EntityManager $em
     * @param $apiKey
     */
    public function __construct(
        EntityManager $em,
        $apiKey
    )
    {
        $this->apiKey = $apiKey;
        $this->em = $em;
    }

    /**
     * @param Viewer $viewer
     * @return $this
     */
    public function setViewer(Viewer $viewer)
    {
        $this->viewer = $viewer;

        return $this;
    }

    /**
     * @return Viewer
     */
    public function getViewer()
    {
        return $this->viewer;
    }

    /**
     * Registers a customer with stripe
     *
     * @param $token - token generated by the user credit card entry form
     */
    public function registerUser($token)
    {
        $customer = Stripe_Customer::create(array(
            "card" => $token,
            "description" => "payinguser@example.com")
        );
        $this->getViewer()->setStripeCustomerId($customer->id);
        $this->getEm()->persist($this->getViewer());
        $this->getEm()->flush();
    }

    /**
     * @return bool
     */
    public function debit()
    {
        // Charge the Customer instead of the card
        Stripe_Charge::create(array(
                "amount" => 1000, # amount in cents, again
                "currency" => "usd",
                "customer" => $customer->id)
        );
        return true;
    }

    /**
     * @return \SM\ChatBundle\PaymentMethod\Doctrine\ORM\EntityManager
     */
    public function getEm()
    {
        return $this->em;
    }

    /**
     * @param \SM\ChatBundle\PaymentMethod\Doctrine\ORM\EntityManager $em
     */
    public function setEm($em)
    {
        $this->em = $em;
    }
}